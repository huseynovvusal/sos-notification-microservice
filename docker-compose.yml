version: "3.9"

services:
  postgres:
    image: postgres:latest
    container_name: sos_postgres_container
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
    networks:
      - backend-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: sos_pgadmin_container
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    depends_on:
      - postgres
    volumes:
      - ./volumes/pgadmin:/var/lib/pgadmin
    networks:
      - backend-network

  mongo:
    image: mongo:latest
    container_name: sos_mongo_container
    ports:
      - "27017:27017"
    volumes:
      - ./volumes/mongo:/data/db
    networks:
      - backend-network

  redis:
    image: redis:latest
    container_name: sos_redis_container
    ports:
      - "6379:6379"
    networks:
      - backend-network

  rabbitmq:
    image: rabbitmq:management
    container_name: sos_rabbitmq_container
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - backend-network

  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile.dev
    container_name: user_service_container
    # restart: always
    ports:
      - "3001:3001"
    depends_on:
      - mongo
      - redis
      - rabbitmq
    env_file:
      - ./services/user-service/.env.development
    environment:
      - MONGO_URI=mongodb://mongo:27017/user
    volumes:
      - ./services/user-service:/app
    networks:
      - backend-network

  # auth-service:
  #   build:
  #     context: ./server/auth-service
  #     dockerfile: Dockerfile.dev
  #   container_name: auth_service_container
  #   # restart: always
  #   ports:
  #     - "3002:3002"
  #   depends_on:
  #     - mongo
  #     - redis
  #     - rabbitmq
  #   env_file:
  #     - ./server/auth-service/.env.development
  #   environment:
  #     - MONGO_URI=mongodb://mongo:27017/auth
  #     - USER_SERVICE_URL=http://user-service:3001
  #   volumes:
  #     - ./server/auth-service:/app
  #     - ./server/proto:/proto
  #     - /app/node_modules
  #   networks:
  #     - backend_network

volumes:
  mongo_data:
  postgres_data:
  pgadmin_data:

networks:
  backend-network:
    driver: bridge
